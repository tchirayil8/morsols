{"version":3,"sources":["containers/Homepage.jsx","components/layout/Navbar.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Homepage","className","Navbar","App","exact","path","component","Boolean","window","location","hostname","match","createBrowserHistory","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAEaA,EAAW,WACpB,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,6BACf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2BAAf,oUAGA,yBAAKA,UAAU,2BAAf,wKAIJ,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2BAAf,+NAGA,yBAAKA,UAAU,2BAAf,cACe,6BADf,2aClBPC,EAAS,WAClB,OACI,yBAAKD,UAAU,UACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBCFdE,EAAM,WACjB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,OCErBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRUC,cAEhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.982b87f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Homepage = () => {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"homepage__header-picture\" />\r\n            <div className=\"homepage__body\">\r\n                <div className=\"container\">\r\n                    <div className=\"homepage__description-1\">\r\n                        We have the Morsol to deliver the gifts of hemp, sun, and good soil to you for your enjoyment. There is so much more to hemp than that which \"gets you high\". You can rest easy knowing our broad spectrum hemp oil is derived from sustainably farmed hemp and the remainder of the plant can be used in many other industries.\r\n                    </div>\r\n                    <div className=\"homepage__description-2\">\r\n                        We believe that outdoor grown, minimally processed hemp is the most wholesome. We have the test results, but only you can be the judge of what goodness feels like.\r\n                    </div>\r\n                </div>\r\n                <div className=\"homepage__picture\" />\r\n                <div className=\"container\">\r\n                    <div className=\"homepage__description-3\">\r\n                        Morsols are designed to be used on the go: at work or school, between errands and exercise. Bring light to your life wherever and whenever you desire. A range of dosages gives you the power to choose what works for you.\r\n                    </div>\r\n                    <div className=\"homepage__description-4\">\r\n                        Processing:<br />\r\n                        Raw hemp material is extracted woth CO2, retaining the delicate terpenes and flavonoids and leaving behind zero solvent. This is the same extraction method used in the decaffenation process for tea and coffee. The oil is then distilled and separated via column chromatography to ensure hemp compliance, an oil free of hard-to-dgiest waxes, and to maximize consumer benefits via adjusting natural ratios of cannabinoids.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar__top\"></div>\r\n            <div className=\"navbar__middle\"></div>\r\n            <div className=\"navbar__bottom\"></div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Homepage } from './containers/Homepage';\r\nimport { Navbar } from './components/layout/Navbar';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  HashRouter as Router,\r\n} from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport './styles/index.scss';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename=\"/\">\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}